@echo off
REM ===========================================
REM V√âRIFICATION DE S√âCURIT√â GIT - WINDOWS
REM ===========================================
REM 
REM Ce script v√©rifie que vos fichiers sensibles ne sont pas dans Git

echo üîç V√âRIFICATION DE S√âCURIT√â GIT
echo ================================
echo.

REM V√©rifier que nous sommes dans un d√©p√¥t Git
if not exist ".git" (
    echo ‚ùå Ce script doit √™tre ex√©cut√© dans un d√©p√¥t Git
    pause
    exit /b 1
)

echo üîç V√©rification des fichiers sensibles dans Git...
echo.

REM Fichiers sensibles √† v√©rifier
set SENSITIVE_FILES=application-local.properties GUIDE-SECRETS.md start-with-secrets.bat start-with-secrets.sh

set FOUND_SENSITIVE=0

for %%f in (%SENSITIVE_FILES%) do (
    git ls-files | findstr /i "%%f" >nul 2>nul
    if !ERRORLEVEL! EQU 0 (
        echo ‚ùå FICHIER SENSIBLE D√âTECT√â: %%f
        echo    Ce fichier est dans Git et contient des secrets !
        set /a FOUND_SENSITIVE+=1
    ) else (
        echo ‚úÖ %%f - Non trouv√© dans Git (s√©curis√©)
    )
)

echo.

REM V√©rifier les patterns de secrets dans les fichiers committ√©s
echo üîç Recherche de secrets dans les fichiers committ√©s...
echo.

git ls-files | findstr /i "secret password key" >nul 2>nul
if %ERRORLEVEL% EQU 0 (
    echo ‚ö†Ô∏è  Fichiers avec des noms suspects trouv√©s:
    git ls-files | findstr /i "secret password key"
    echo.
)

REM V√©rifier le contenu des fichiers pour des secrets
echo üîç V√©rification du contenu des fichiers...
echo.

REM Chercher des patterns de secrets dans les fichiers committ√©s
REM V√©rifier seulement les URLs compl√®tes avec des identifiants
git grep -l "jdbc:postgresql://.*:.*@" -- "*.properties" "*.java" "*.md" 2>nul
if %ERRORLEVEL% EQU 0 (
    echo ‚ùå SECRETS D√âTECT√âS dans les fichiers committ√©s !
    echo    Fichiers contenant des URLs de base de donn√©es avec identifiants:
    git grep -l "jdbc:postgresql://.*:.*@" -- "*.properties" "*.java" "*.md" 2>nul
    set /a FOUND_SENSITIVE+=1
) else (
    echo ‚úÖ Aucun secret de base de donn√©es trouv√© dans les fichiers committ√©s
)

git grep -l "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9" -- "*.properties" "*.java" "*.md" 2>nul
if %ERRORLEVEL% EQU 0 (
    echo ‚ùå SECRETS D√âTECT√âS dans les fichiers committ√©s !
    echo    Fichiers contenant des cl√©s JWT:
    git grep -l "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9" -- "*.properties" "*.java" "*.md" 2>nul
    set /a FOUND_SENSITIVE+=1
) else (
    echo ‚úÖ Aucune cl√© JWT trouv√©e dans les fichiers committ√©s
)

echo.

REM R√©sum√©
echo üìä R√âSUM√â DE LA V√âRIFICATION
echo =============================

if %FOUND_SENSITIVE% EQU 0 (
    echo ‚úÖ Aucun fichier sensible d√©tect√© dans Git
    echo üîí Votre d√©p√¥t est s√©curis√© !
) else (
    echo ‚ùå %FOUND_SENSITIVE% probl√®me(s) de s√©curit√© d√©tect√©(s)
    echo.
    echo üö® ACTIONS REQUISES:
    echo    1. Supprimez les fichiers sensibles de Git
    echo    2. Ajoutez-les au .gitignore
    echo    3. R√©g√©n√©rez les secrets compromis
    echo.
    echo üí° Commandes utiles:
    echo    git rm --cached application-local.properties
    echo    git rm --cached GUIDE-SECRETS.md
    echo    git commit -m "Remove sensitive files"
)

echo.
pause
